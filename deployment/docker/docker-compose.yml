version: '3.8'

services:
  # 前端应用
  frontend:
    build:
      context: ../../
      dockerfile: deployment/docker/Dockerfile
    container_name: warp-zone-gems-frontend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    volumes:
      - ./ssl:/etc/nginx/ssl:ro  # SSL证书挂载（如果使用HTTPS）
    networks:
      - warp-zone-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.warp-zone-frontend.rule=Host(`warpzonegems.com`)"
      - "traefik.http.routers.warp-zone-frontend.tls=true"
      - "traefik.http.routers.warp-zone-frontend.tls.certresolver=letsencrypt"

  # 可选：本地开发后端（如果不使用Supabase）
  # backend:
  #   image: node:18-alpine
  #   container_name: warp-zone-gems-backend
  #   working_dir: /app
  #   command: npm start
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=postgresql://user:password@database:5432/warp_zone_gems
  #     - JWT_SECRET=${JWT_SECRET}
  #     - SUPABASE_URL=${SUPABASE_URL}
  #     - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
  #   volumes:
  #     - ../../backend:/app
  #   networks:
  #     - warp-zone-network
  #   depends_on:
  #     - database
  #   restart: unless-stopped

  # 可选：数据库（如果需要本地数据库）
  # database:
  #   image: postgres:15-alpine
  #   container_name: warp-zone-gems-db
  #   environment:
  #     - POSTGRES_DB=warp_zone_gems
  #     - POSTGRES_USER=admin
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #     - ../database/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
  #   networks:
  #     - warp-zone-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U admin -d warp_zone_gems"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # 可选：Redis 缓存
  # redis:
  #   image: redis:7-alpine
  #   container_name: warp-zone-gems-redis
  #   command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - warp-zone-network
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # 反向代理和负载均衡器（可选）
  # traefik:
  #   image: traefik:v2.10
  #   container_name: warp-zone-gems-traefik
  #   command:
  #     - "--api.dashboard=true"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
  #     - "--certificatesresolvers.letsencrypt.acme.email=admin@warpzonegems.com"
  #     - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     - "8080:8080"  # Traefik 仪表板
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - traefik_letsencrypt:/letsencrypt
  #   networks:
  #     - warp-zone-network
  #   restart: unless-stopped

  # 监控和日志
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: warp-zone-gems-prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #     - '--storage.tsdb.path=/prometheus'
  #     - '--web.console.libraries=/etc/prometheus/console_libraries'
  #     - '--web.console.templates=/etc/prometheus/consoles'
  #     - '--storage.tsdb.retention.time=200h'
  #     - '--web.enable-lifecycle'
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - prometheus_data:/prometheus
  #   networks:
  #     - warp-zone-network
  #   restart: unless-stopped

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: warp-zone-gems-grafana
  #   ports:
  #     - "3001:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
  #   volumes:
  #     - grafana_data:/var/lib/grafana
  #     - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
  #   networks:
  #     - warp-zone-network
  #   restart: unless-stopped

# 网络配置
networks:
  warp-zone-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

# 数据卷
volumes:
  # postgres_data:
  #   driver: local
  # redis_data:
  #   driver: local
  # traefik_letsencrypt:
  #   driver: local
  # prometheus_data:
  #   driver: local
  # grafana_data:
  #   driver: local